task-2

CREATE TABLE Drivers (
    DriverID INT AUTO_INCREMENT PRIMARY KEY, 
    FirstName VARCHAR(100),
    LastName VARCHAR(100),
    Phone VARCHAR(15),
    City VARCHAR(100),
    VehicleType VARCHAR(50),
    Rating DECIMAL(3, 2) CHECK (Rating >= 0 AND Rating <= 5) 
);


CREATE TABLE Riders (
    RiderID INT AUTO_INCREMENT PRIMARY KEY, 
    FirstName VARCHAR(100),
    LastName VARCHAR(100),
    Phone VARCHAR(15),
    City VARCHAR(100),
    JoinDate DATE
);


CREATE TABLE Rides (
    RideID INT AUTO_INCREMENT PRIMARY KEY,  
    RiderID INT,  
    DriverID INT,  
    RideDate DATETIME,
    PickupLocation VARCHAR(100),
    DropLocation VARCHAR(100),
    Distance DECIMAL(5, 2),  
    Fare DECIMAL(10, 2),  
    RideStatus VARCHAR(20), 
    FOREIGN KEY (RiderID) REFERENCES Riders(RiderID),
    FOREIGN KEY (DriverID) REFERENCES Drivers(DriverID)
);


CREATE TABLE Payments (
    PaymentID INT AUTO_INCREMENT PRIMARY KEY,  
    RideID INT,  
    PaymentMethod VARCHAR(20), 
    Amount DECIMAL(10, 2),  
    PaymentDate DATETIME,
    FOREIGN KEY (RideID) REFERENCES Rides(RideID)
);


INSERT INTO Drivers (FirstName, LastName, Phone, City, VehicleType, Rating)
VALUES
('Amit', 'Sharma', '9876543210', 'Delhi', 'Sedan', 4.6),
('Priya', 'Patel', '9765432109', 'Mumbai', 'SUV', 4.8),
('Vikram', 'Reddy', '9654321098', 'Bangalore', 'Hatchback', 4.3),
('Rajesh', 'Kumar', '9543210987', 'Chennai', 'Sedan', 3.9),
('Sanya', 'Desai', '9432109876', 'Hyderabad', 'SUV', 4.7),
('Neha', 'Gupta', '9321098765', 'Pune', 'Hatchback', 4.5),
('Ravi', 'Mehta', '9210987654', 'Kolkata', 'Sedan', 4.2),
('Anjali', 'Iyer', '9109876543', 'Delhi', 'SUV', 4.4),
('Manoj', 'Singh', '8998765432', 'Mumbai', 'Sedan', 4.1),
('Simran', 'Kaur', '8887654321', 'Bangalore', 'Hatchback', 4.9);

INSERT INTO Riders (FirstName, LastName, Phone, City, JoinDate)
VALUES
('Siddharth', 'Gupta', '8012345678', 'Delhi', '2024-05-10'),
('Ayesha', 'Khan', '8023456789', 'Mumbai', '2023-07-15'),
('Ravi', 'Sharma', '8034567890', 'Bangalore', '2024-02-01'),
('Deepa', 'Nair', '8045678901', 'Chennai', '2023-10-20'),
('Kiran', 'Verma', '8056789012', 'Hyderabad', '2023-11-05'),
('Nitin', 'Patel', '8067890123', 'Pune', '2024-03-15'),
('Neelam', 'Reddy', '8078901234', 'Kolkata', '2022-12-10'),
('Rishabh', 'Singh', '8089012345', 'Delhi', '2024-01-01'),
('Shreya', 'Desai', '8090123456', 'Mumbai', '2023-09-01'),
('Vishal', 'Iyer', '8101234567', 'Bangalore', '2024-04-20');

INSERT INTO Rides (RiderID, DriverID, RideDate, PickupLocation, DropLocation, Distance, Fare, RideStatus)
VALUES
(1, 1, '2024-05-10 09:30:00', 'Connaught Place', 'India Gate', 3.2, 150.00, 'Completed'),
(2, 2, '2023-07-15 17:00:00', 'Bandra', 'Juhu Beach', 8.5, 350.00, 'Completed'),
(3, 3, '2024-02-01 12:00:00', 'MG Road', 'Indiranagar', 5.5, 220.00, 'Completed'),
(4, 4, '2023-10-20 08:45:00', 'Marina Beach', 'Valluvar Kottam', 10.0, 400.00, 'Completed'),
(5, 5, '2023-11-05 15:30:00', 'Hitech City', 'Banjara Hills', 7.8, 320.00, 'Completed'),
(6, 6, '2024-03-15 14:00:00', 'FC Road', 'Kothrud', 4.2, 180.00, 'Completed'),
(7, 7, '2022-12-10 11:15:00', 'Park Street', 'Howrah Bridge', 6.0, 250.00, 'Completed'),
(8, 8, '2024-01-01 10:00:00', 'Rajiv Chowk', 'Saket', 9.0, 370.00, 'Completed'),
(9, 9, '2023-09-01 13:45:00', 'Lower Parel', 'Nariman Point', 4.0, 180.00, 'Cancelled'),
(10, 10, '2024-04-20 16:30:00', 'Koramangala', 'Whitefield', 12.5, 500.00, 'Ongoing');

INSERT INTO Payments (RideID, PaymentMethod, Amount, PaymentDate)
VALUES
(1, 'Card', 150.00, '2024-05-10 09:35:00'),
(2, 'Cash', 350.00, '2023-07-15 17:05:00'),
(3, 'Wallet', 220.00, '2024-02-01 12:05:00'),
(4, 'Card', 400.00, '2023-10-20 08:50:00'),
(5, 'Wallet', 320.00, '2023-11-05 15:40:00'),
(6, 'Cash', 180.00, '2024-03-15 14:05:00'),
(7, 'Card', 250.00, '2022-12-10 11:20:00'),
(8, 'Wallet', 370.00, '2024-01-01 10:05:00'),
(9, 'Cash', 180.00, '2023-09-01 13:50:00'),
(10, 'Card', 500.00, '2024-04-20 16:40:00');


1. Retrieve the names and contact details of all drivers with a rating of 4.5 or higher.
SELECT FirstName, LastName, Phone, City, VehicleType, Rating
FROM Drivers
WHERE Rating >= 4.5;

2. Find the total number of rides completed by each driver.
SELECT d.FirstName, d.LastName, COUNT(r.RideID) AS TotalRides
FROM Drivers d
LEFT JOIN Rides r ON d.DriverID = r.DriverID
WHERE r.RideStatus = 'Completed'
GROUP BY d.DriverID;

3. List all riders who have never booked a ride.
SELECT FirstName, LastName, Phone, City, JoinDate
FROM Riders
WHERE RiderID NOT IN (SELECT DISTINCT RiderID FROM Rides);

4. Calculate the total earnings of each driver from completed rides.
SELECT d.FirstName, d.LastName, SUM(p.Amount) AS TotalEarnings
FROM Drivers d
JOIN Rides r ON d.DriverID = r.DriverID
JOIN Payments p ON r.RideID = p.RideID
WHERE r.RideStatus = 'Completed'
GROUP BY d.DriverID;

5. Retrieve the most recent ride for each rider.
SELECT r.RiderID, r.RideID, r.RideDate, r.PickupLocation, r.DropLocation, r.Fare
FROM Rides r
WHERE r.RideID IN (
    SELECT MAX(RideID)
    FROM Rides
    GROUP BY RiderID
);

6. Count the number of rides taken in each city.
SELECT City, COUNT(RideID) AS RideCount
FROM (
    SELECT r.RideID, rd.City
    FROM Rides r
    JOIN Riders rd ON r.RiderID = rd.RiderID
    UNION ALL
    SELECT r.RideID, dd.City
    FROM Rides r
    JOIN Drivers dd ON r.DriverID = dd.DriverID
) AS CityRides
GROUP BY City;


7. List all rides where the distance was greater than 20 km.
SELECT RideID, RiderID, DriverID, RideDate, PickupLocation, DropLocation, Distance, Fare, RideStatus
FROM Rides
WHERE Distance > 20;

8. Identify the most preferred payment method.
SELECT PaymentMethod, COUNT(*) AS PaymentCount
FROM Payments
GROUP BY PaymentMethod
ORDER BY PaymentCount DESC
LIMIT 1;


9. Find the top 3 highest-earning drivers.
SELECT d.FirstName, d.LastName, SUM(p.Amount) AS TotalEarnings
FROM Drivers d
JOIN Rides r ON d.DriverID = r.DriverID
JOIN Payments p ON r.RideID = p.RideID
WHERE r.RideStatus = 'Completed'
GROUP BY d.DriverID
ORDER BY TotalEarnings DESC
LIMIT 3;


10. Retrieve details of all cancelled rides along with the rider's and driver's names.
SELECT r.RideID, rd.FirstName AS RiderFirstName, rd.LastName AS RiderLastName,
       d.FirstName AS DriverFirstName, d.LastName AS DriverLastName,
       r.RideDate, r.PickupLocation, r.DropLocation, r.Distance, r.Fare
FROM Rides r
JOIN Riders rd ON r.RiderID = rd.RiderID
JOIN Drivers d ON r.DriverID = d.DriverID
WHERE r.RideStatus = 'Cancelled';
